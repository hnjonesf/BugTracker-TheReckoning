@model PagedList.IPagedList<BugTracker_The_Reckoning.Models.Ticket>
@using PagedList;
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index of Tickets";
}
<div class="row">
    <div class="col-xs-3">
        <h2>Index of Tickets</h2>
    </div>
    <div class="col-xs-7"></div>
    <div class="col-xs-2" style="margin-top:15px">
        @using (Html.BeginForm("Index", "Tickets", FormMethod.Post))
        {
            @Html.TextBox("searchStr")
            <div>
                <input type="submit" value="Search Tickets" />
            </div>
        }
    </div>
</div>


<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table table-striped">
    <tr>
        <th>
            @Html.ActionLink("Submitted By", "Index", new { sortOrder = ViewBag.NameSortParm, searchStr = ViewBag.searchStr })
        </th>
        <th>
            @Html.ActionLink("Project Name", "Index", new { sortOrder = ViewBag.ProjectNameParm, searchStr = ViewBag.searchStr })
        </th>
        <th>
            @Html.ActionLink("Priority", "Index", new { sortOrder = ViewBag.TicketPriorityNameParm, searchStr = ViewBag.searchStr })
        </th>
        <th>
            @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.TicketStatusesNameParm, searchStr = ViewBag.searchStr })
        </th>
        <th>
            @Html.ActionLink("Type", "Index", new { sortOrder = ViewBag.TicketTypesNameParm, searchStr = ViewBag.searchStr })
        </th>
        <th>
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleParm, searchStr = ViewBag.searchStr })
        </th>
        <th>
            @Html.ActionLink("Description", "Index", new { sortOrder = ViewBag.DescriptionParm, searchStr = ViewBag.searchStr })
        </th>
        <th>
            @Html.ActionLink("Created", "Index", new { sortOrder = ViewBag.CreatedParm, searchStr = ViewBag.searchStr })
        </th>
        <th>
            @Html.ActionLink("Updated", "Index", new { sortOrder = ViewBag.UpdatedParm, searchStr = ViewBag.searchStr })
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.OwnerUser.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Project.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TicketPriority.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TicketStatuses.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TicketTypes.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Created)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Updated)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id })
            @*@Html.ActionLink("Delete", "Delete", new { id=item.Id })*@
        </td>
    </tr>
} 

</table>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.sortOrder, searchStr = ViewBag.searchStr }))
