@model PagedList.IPagedList<BugTracker_The_Reckoning.Models.Ticket>
@using PagedList;
@using PagedList.Mvc;

@{
    ViewBag.Title = "Tickets List";
}
<div class="row">
    <div class="col-xs-8">
        <h2>Tickets List</h2>
    </div>

</div>
<div class="row">
    <div class="col-xs-10">
        <p>
            @Html.ActionLink("Create New", "Create")
        </p>
        <div class="panel-group" id="tickets">
            @if (Model != null)
            {
                <div class="row">
                    <div class="col-xs-12">
                        <table class="table table-striped">
                            <tr>
                                <th>
                                    @Html.ActionLink("Submitted By", "Index", new { sortOrder = ViewBag.NameSortParm, searchStr = ViewBag.searchStr })
                                </th>
                                <th>
                                    @Html.ActionLink("Project Name", "Index", new { sortOrder = ViewBag.ProjectNameParm, searchStr = ViewBag.searchStr })
                                </th>
                                <th>
                                    @Html.ActionLink("Priority", "Index", new { sortOrder = ViewBag.TicketPriorityNameParm, searchStr = ViewBag.searchStr })
                                </th>
                                <th>
                                    @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.TicketStatusesNameParm, searchStr = ViewBag.searchStr })
                                </th>
                                <th>
                                    @Html.ActionLink("Type", "Index", new { sortOrder = ViewBag.TicketTypesNameParm, searchStr = ViewBag.searchStr })
                                </th>
                                <th>
                                    @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleParm, searchStr = ViewBag.searchStr })
                                </th>
                                <th>
                                    @Html.ActionLink("Created", "Index", new { sortOrder = ViewBag.CreatedParm, searchStr = ViewBag.searchStr })
                                </th>
                                <th>
                                    @Html.ActionLink("Updated", "Index", new { sortOrder = ViewBag.UpdatedParm, searchStr = ViewBag.searchStr })
                                </th>
                                <th>
                                    @Html.ActionLink("Assigned Developer", "Index", new { sortOrder = ViewBag.AssignedParm, searchStr = ViewBag.searchStr })
                                </th>
                            </tr>
                        </table>
                    </div>
                </div>
                foreach (var item in Model)
                {
                    string theHref = "#panel-element-tickets" + item.Id;
                    string theId = "panel-element-tickets" + item.Id;
                    <div class="panel panel-default">
                        <div class="panel-heading col-sm-12">
                            <a class="panel-title collapsed" data-toggle="collapse" data-parent="#tickets" href=@theHref>
                                @if (ViewBag.sortOrder != null)
                                {
                                    switch (ViewBag.sortOrder as string)
                                    {
                                        case ("FirstName"):
                                            @Html.DisplayFor(modelItem => item.OwnerUser.FirstName)
                                            break;
                                        case ("FirstName_D"):
                                        @Html.DisplayFor(modelItem => item.OwnerUser.FirstName)
                                            break;
                                        case ("ProjectName"):
                                        @Html.DisplayFor(modelItem => item.Project.Name)
                                            break;
                                        case ("ProjectName_D"):
                                        @Html.DisplayFor(modelItem => item.Project.Name)
                                            break;
                                        case ("TicketPriorityName"):
                                        @Html.DisplayFor(modelItem => item.TicketPriority.Name)
                                            break;
                                        case ("TicketPriorityName_D"):
                                        @Html.DisplayFor(modelItem => item.TicketPriority.Name)
                                            break;
                                        case ("TicketStatusesName"):
                                        @Html.DisplayFor(modelItem => item.TicketStatuses.Name)
                                            break;
                                        case ("TicketStatusesName_D"):
                                        @Html.DisplayFor(modelItem => item.TicketStatuses.Name)
                                            break;
                                        case ("TicketTypesName"):
                                        @Html.DisplayFor(modelItem => item.TicketTypes.Name)
                                            break;
                                        case ("TicketTypesName_D"):
                                        @Html.DisplayFor(modelItem => item.TicketTypes.Name)
                                            break;
                                        case ("Title"):
                                        @Html.DisplayFor(modelItem => item.Title)
                                            break;
                                        case ("Title_D"):
                                        @Html.DisplayFor(modelItem => item.Title)
                                            break;
                                        case ("Created"):
                                        @Html.DisplayFor(modelItem => item.Created)
                                            break;
                                        case ("Created_D"):
                                        @Html.DisplayFor(modelItem => item.Created)
                                            break;
                                        case ("Updated"):
                                        @Html.DisplayFor(modelItem => item.Updated)
                                            break;
                                        case ("Updated_D"):
                                        @Html.DisplayFor(modelItem => item.Updated)
                                            break;
                                        case ("Assigned"):
                                        @Html.DisplayFor(modelItem => item.AssignedUser.DisplayName)
                                            break;
                                        case ("Assigned_D"):
                                        @Html.DisplayFor(modelItem => item.AssignedUser.DisplayName)
                                            break;

                                    }

                                }
                                else
                                {
                                    @Html.DisplayFor(modelItem => item.Title)
                                }

                            </a>
                        </div>
                        <div id=@theId class="panel-collapse collapse">
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-xs-12" style="background-image:linear-gradient(#04519b, #044687 60%, #033769); margin-bottom:10px">
                                        <h1 style="text-align:center; color:white;">@Html.DisplayFor(modelItem => item.Title)</h1>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-xs-12">
                                        <div class="col-sm-2">
                                            <p><b>Submitted By: </b></p>
                                            <p><b>Project Name: </b></p>
                                            <p><b>Assigned Developer:</b></p>
                                        </div>
                                        <div class="col-sm-3">
                                            <p>@Html.DisplayFor(modelItem => item.OwnerUser.FirstName)</p>
                                            <p>@Html.DisplayFor(modelItem => item.Project.Name)</p>
                                            <p>@Html.DisplayFor(modelItem => item.AssignedUser.DisplayName)</p>
                                        </div>
                                        <div class="col-sm-1">
                                            <p><b>Status:</b></p>
                                            <p><b>Priority:</b></p>
                                            <p><b>Type:</b></p>
                                        </div>
                                        <div class="col-sm-2">
                                            <p>@Html.DisplayFor(modelItem => item.TicketStatuses.Name)</p>
                                            <p>@Html.DisplayFor(modelItem => item.TicketPriority.Name)</p>
                                            <p>@Html.DisplayFor(modelItem => item.TicketTypes.Name)</p>
                                        </div>
                                        <div class="col-sm-1">
                                            <p>
                                                <b>
                                                    Created:
                                                </b>
                                            </p>
                                            <p><b>Updated:</b></p>
                                        </div>
                                        <div class="col-sm-2">
                                            <p>
                                                @Html.DisplayFor(modelItem => item.Created)
                                            </p>
                                            <p>@Html.DisplayFor(modelItem => item.Updated) </p>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-10 column">
                                        <div class="col-sm-4">
                                            <h3>
                                                @Html.ActionLink("Attachments(" + item.TicketAttachments.Count() + ")", "Details/" + item.Id)
                                            </h3>
                                        </div>
                                        <div class="col-sm-4">
                                            <h3>
                                                @Html.ActionLink("Comments(" + item.TicketAttachments.Count() + ")", "Details/" + item.Id)
                                            </h3>
                                        </div>
                                        <div class="col-sm-4">
                                            <h3>
                                                @Html.ActionLink("History(" + item.TicketAttachments.Count() + ")", "Details/" + item.Id)
                                            </h3>
                                        </div>
                                    </div>
                                    <div class="col-md-2 column">
                                        <div class="btn-group btn-group-vertical" style="padding-top:20px">
                                            @if (User.IsInRole("Administrator") || User.IsInRole("Project Manager"))
                                            {
                                                <span title="Edit Ticket"><em>@Html.ActionLink(" ", "Edit", new { id = item.Id }, new { @class = "btn btn-default glyphicon glyphicon-pencil" })</em></span>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                }
            }
        </div>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.sortOrder, searchStr = ViewBag.searchStr, ViewBag.titleSearch, ViewBag.nameSearch, ViewBag.emailSearch, ViewBag.projectSearch, ViewBag.attachmentsSearch, ViewBag.prioritySearch, ViewBag.statusSearch, ViewBag.typeSearch, ViewBag.assignSearch }))
    </div>
    <div class="col-xs-2">
        @using (Html.BeginForm("Index", "Tickets", FormMethod.Post))
        {
            <div class="row" style="margin-top:20px">
                @Html.TextBox("searchStr")<button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-search"></span></button>
                <button type="button" class="btn btn-primary" onclick="AdvancedSearch()">Advanced Search</button>
            </div>
            <div class="advancedSearch" id="adv" style="font-size:12px">
                <h3>Include:</h3>
                <div class="row">
                    @Html.CheckBox("titleSearch", (bool)ViewBag.titleSearch)
                    @Html.Label("Title")
                </div>
                <div class="row">
                    @Html.CheckBox("nameSearch", (bool)ViewBag.nameSearch)
                    @Html.Label("Owner Name")
                </div>
                <div class="row">
                    @Html.CheckBox("emailSearch", (bool)ViewBag.emailSearch)
                    @Html.Label("Owner Email")
                </div>
                <div class="row">
                    @Html.CheckBox("projectSearch", (bool)ViewBag.projectSearch)
                    @Html.Label("Projects")
                </div>
                <div class="row">
                    @Html.CheckBox("attachmentsSearch", (bool)ViewBag.attachmentsSearch)
                    @Html.Label("Attachments")
                </div>
                <div class="row">
                    @Html.CheckBox("prioritySearch", (bool)ViewBag.prioritySearch)
                    @Html.Label("Priority")
                </div>
                <div class="row">
                    @Html.CheckBox("typeSearch", (bool)ViewBag.typeSearch)
                    @Html.Label("Type")
                </div>
                <div class="row">
                    @Html.CheckBox("statusSearch", (bool)ViewBag.statusSearch)
                    @Html.Label("Status")
                </div>
                <div class="row">
                    @Html.CheckBox("assignSearch", (bool)ViewBag.assignSearch)
                    @Html.Label("Developer")
                </div>
            </div>
        }
        <div class="row" id="filters">

        </div>

    </div>

</div>
<script src="~/Scripts/TicketsIndex.js"></script>