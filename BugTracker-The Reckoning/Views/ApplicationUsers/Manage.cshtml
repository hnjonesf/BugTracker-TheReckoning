@model BugTracker_The_Reckoning.Models.AssignPageModel
@{
    ViewBag.Title = "Manage";
}
<h2>Manage</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UserNotProjects, "UserNotProjects", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.newProject, Model.UserNotProjects, "Add to Project", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.newProject, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UserNotTickets, "UserNotTickets", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.newTicket, Model.UserNotTickets, "Add to Ticket", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.newTicket, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UserNotRoles, "UserNotRoles", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.newRole, Model.UserNotRoles, "Add to Role", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.newRole, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}